<?php
/**
 * EmpresaSelecionadora
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * EmpresaSelecionadora Class Doc Comment
 *
 * @category    Class
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class EmpresaSelecionadora implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'EmpresaSelecionadora';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'cnpj' => 'double',
        'razao_social' => 'string',
        'nome_fantasia' => 'string',
        'matriz' => 'bool',
        'site' => 'string',
        'ddd_telefone' => 'int',
        'num_telefone' => 'int',
        'endereco' => '\Swagger\Client\Model\InlineResponse2004Endereco'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'cnpj' => 'double',
        'razao_social' => null,
        'nome_fantasia' => null,
        'matriz' => null,
        'site' => null,
        'ddd_telefone' => 'int32',
        'num_telefone' => 'int32',
        'endereco' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'cnpj' => 'CNPJ',
        'razao_social' => 'RazaoSocial',
        'nome_fantasia' => 'NomeFantasia',
        'matriz' => 'Matriz',
        'site' => 'Site',
        'ddd_telefone' => 'DDDTelefone',
        'num_telefone' => 'NumTelefone',
        'endereco' => 'Endereco'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'cnpj' => 'setCnpj',
        'razao_social' => 'setRazaoSocial',
        'nome_fantasia' => 'setNomeFantasia',
        'matriz' => 'setMatriz',
        'site' => 'setSite',
        'ddd_telefone' => 'setDddTelefone',
        'num_telefone' => 'setNumTelefone',
        'endereco' => 'setEndereco'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'cnpj' => 'getCnpj',
        'razao_social' => 'getRazaoSocial',
        'nome_fantasia' => 'getNomeFantasia',
        'matriz' => 'getMatriz',
        'site' => 'getSite',
        'ddd_telefone' => 'getDddTelefone',
        'num_telefone' => 'getNumTelefone',
        'endereco' => 'getEndereco'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['cnpj'] = isset($data['cnpj']) ? $data['cnpj'] : null;
        $this->container['razao_social'] = isset($data['razao_social']) ? $data['razao_social'] : null;
        $this->container['nome_fantasia'] = isset($data['nome_fantasia']) ? $data['nome_fantasia'] : null;
        $this->container['matriz'] = isset($data['matriz']) ? $data['matriz'] : null;
        $this->container['site'] = isset($data['site']) ? $data['site'] : null;
        $this->container['ddd_telefone'] = isset($data['ddd_telefone']) ? $data['ddd_telefone'] : null;
        $this->container['num_telefone'] = isset($data['num_telefone']) ? $data['num_telefone'] : null;
        $this->container['endereco'] = isset($data['endereco']) ? $data['endereco'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets cnpj
     * @return double
     */
    public function getCnpj()
    {
        return $this->container['cnpj'];
    }

    /**
     * Sets cnpj
     * @param double $cnpj
     * @return $this
     */
    public function setCnpj($cnpj)
    {
        $this->container['cnpj'] = $cnpj;

        return $this;
    }

    /**
     * Gets razao_social
     * @return string
     */
    public function getRazaoSocial()
    {
        return $this->container['razao_social'];
    }

    /**
     * Sets razao_social
     * @param string $razao_social
     * @return $this
     */
    public function setRazaoSocial($razao_social)
    {
        $this->container['razao_social'] = $razao_social;

        return $this;
    }

    /**
     * Gets nome_fantasia
     * @return string
     */
    public function getNomeFantasia()
    {
        return $this->container['nome_fantasia'];
    }

    /**
     * Sets nome_fantasia
     * @param string $nome_fantasia
     * @return $this
     */
    public function setNomeFantasia($nome_fantasia)
    {
        $this->container['nome_fantasia'] = $nome_fantasia;

        return $this;
    }

    /**
     * Gets matriz
     * @return bool
     */
    public function getMatriz()
    {
        return $this->container['matriz'];
    }

    /**
     * Sets matriz
     * @param bool $matriz
     * @return $this
     */
    public function setMatriz($matriz)
    {
        $this->container['matriz'] = $matriz;

        return $this;
    }

    /**
     * Gets site
     * @return string
     */
    public function getSite()
    {
        return $this->container['site'];
    }

    /**
     * Sets site
     * @param string $site
     * @return $this
     */
    public function setSite($site)
    {
        $this->container['site'] = $site;

        return $this;
    }

    /**
     * Gets ddd_telefone
     * @return int
     */
    public function getDddTelefone()
    {
        return $this->container['ddd_telefone'];
    }

    /**
     * Sets ddd_telefone
     * @param int $ddd_telefone
     * @return $this
     */
    public function setDddTelefone($ddd_telefone)
    {
        $this->container['ddd_telefone'] = $ddd_telefone;

        return $this;
    }

    /**
     * Gets num_telefone
     * @return int
     */
    public function getNumTelefone()
    {
        return $this->container['num_telefone'];
    }

    /**
     * Sets num_telefone
     * @param int $num_telefone
     * @return $this
     */
    public function setNumTelefone($num_telefone)
    {
        $this->container['num_telefone'] = $num_telefone;

        return $this;
    }

    /**
     * Gets endereco
     * @return \Swagger\Client\Model\InlineResponse2004Endereco
     */
    public function getEndereco()
    {
        return $this->container['endereco'];
    }

    /**
     * Sets endereco
     * @param \Swagger\Client\Model\InlineResponse2004Endereco $endereco
     * @return $this
     */
    public function setEndereco($endereco)
    {
        $this->container['endereco'] = $endereco;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


