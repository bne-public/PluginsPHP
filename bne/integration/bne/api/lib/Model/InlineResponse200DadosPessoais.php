<?php
/**
 * InlineResponse200DadosPessoais
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * 
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * InlineResponse200DadosPessoais Class Doc Comment
 *
 * @category    Class
 * @description Classe com os dados pessoais do candidato
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse200DadosPessoais implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'inline_response_200_DadosPessoais';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'numero_rg' => 'double',
        'orgao_emissor_rg' => 'string',
        'estado_civil' => 'string',
        'endereco' => '\Swagger\Client\Model\InlineResponse200DadosPessoaisEndereco',
        'ddd_telefone_fixo' => 'int',
        'numero_telefone_fixo' => 'double',
        'ddd_celular_recado' => 'int',
        'numero_celular_recado' => 'double',
        'nome_contato_celular' => 'string',
        'ddd_telefone_fixo_recado' => 'int',
        'numero_telefone_fixo_recado' => 'double',
        'nome_contato_telefone_fixo' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        'numero_rg' => 'double',
        'orgao_emissor_rg' => null,
        'estado_civil' => null,
        'endereco' => null,
        'ddd_telefone_fixo' => 'int32',
        'numero_telefone_fixo' => 'double',
        'ddd_celular_recado' => 'int32',
        'numero_celular_recado' => 'double',
        'nome_contato_celular' => null,
        'ddd_telefone_fixo_recado' => 'int32',
        'numero_telefone_fixo_recado' => 'double',
        'nome_contato_telefone_fixo' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'numero_rg' => 'NumeroRg',
        'orgao_emissor_rg' => 'OrgaoEmissorRg',
        'estado_civil' => 'EstadoCivil',
        'endereco' => 'Endereco',
        'ddd_telefone_fixo' => 'DDDTelefoneFixo',
        'numero_telefone_fixo' => 'NumeroTelefoneFixo',
        'ddd_celular_recado' => 'DDDCelularRecado',
        'numero_celular_recado' => 'NumeroCelularRecado',
        'nome_contato_celular' => 'NomeContatoCelular',
        'ddd_telefone_fixo_recado' => 'DDDTelefoneFixoRecado',
        'numero_telefone_fixo_recado' => 'NumeroTelefoneFixoRecado',
        'nome_contato_telefone_fixo' => 'NomeContatoTelefoneFixo'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'numero_rg' => 'setNumeroRg',
        'orgao_emissor_rg' => 'setOrgaoEmissorRg',
        'estado_civil' => 'setEstadoCivil',
        'endereco' => 'setEndereco',
        'ddd_telefone_fixo' => 'setDddTelefoneFixo',
        'numero_telefone_fixo' => 'setNumeroTelefoneFixo',
        'ddd_celular_recado' => 'setDddCelularRecado',
        'numero_celular_recado' => 'setNumeroCelularRecado',
        'nome_contato_celular' => 'setNomeContatoCelular',
        'ddd_telefone_fixo_recado' => 'setDddTelefoneFixoRecado',
        'numero_telefone_fixo_recado' => 'setNumeroTelefoneFixoRecado',
        'nome_contato_telefone_fixo' => 'setNomeContatoTelefoneFixo'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'numero_rg' => 'getNumeroRg',
        'orgao_emissor_rg' => 'getOrgaoEmissorRg',
        'estado_civil' => 'getEstadoCivil',
        'endereco' => 'getEndereco',
        'ddd_telefone_fixo' => 'getDddTelefoneFixo',
        'numero_telefone_fixo' => 'getNumeroTelefoneFixo',
        'ddd_celular_recado' => 'getDddCelularRecado',
        'numero_celular_recado' => 'getNumeroCelularRecado',
        'nome_contato_celular' => 'getNomeContatoCelular',
        'ddd_telefone_fixo_recado' => 'getDddTelefoneFixoRecado',
        'numero_telefone_fixo_recado' => 'getNumeroTelefoneFixoRecado',
        'nome_contato_telefone_fixo' => 'getNomeContatoTelefoneFixo'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['numero_rg'] = isset($data['numero_rg']) ? $data['numero_rg'] : null;
        $this->container['orgao_emissor_rg'] = isset($data['orgao_emissor_rg']) ? $data['orgao_emissor_rg'] : null;
        $this->container['estado_civil'] = isset($data['estado_civil']) ? $data['estado_civil'] : null;
        $this->container['endereco'] = isset($data['endereco']) ? $data['endereco'] : null;
        $this->container['ddd_telefone_fixo'] = isset($data['ddd_telefone_fixo']) ? $data['ddd_telefone_fixo'] : null;
        $this->container['numero_telefone_fixo'] = isset($data['numero_telefone_fixo']) ? $data['numero_telefone_fixo'] : null;
        $this->container['ddd_celular_recado'] = isset($data['ddd_celular_recado']) ? $data['ddd_celular_recado'] : null;
        $this->container['numero_celular_recado'] = isset($data['numero_celular_recado']) ? $data['numero_celular_recado'] : null;
        $this->container['nome_contato_celular'] = isset($data['nome_contato_celular']) ? $data['nome_contato_celular'] : null;
        $this->container['ddd_telefone_fixo_recado'] = isset($data['ddd_telefone_fixo_recado']) ? $data['ddd_telefone_fixo_recado'] : null;
        $this->container['numero_telefone_fixo_recado'] = isset($data['numero_telefone_fixo_recado']) ? $data['numero_telefone_fixo_recado'] : null;
        $this->container['nome_contato_telefone_fixo'] = isset($data['nome_contato_telefone_fixo']) ? $data['nome_contato_telefone_fixo'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        if ($this->container['estado_civil'] === null) {
            $invalid_properties[] = "'estado_civil' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        if ($this->container['estado_civil'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets numero_rg
     * @return double
     */
    public function getNumeroRg()
    {
        return $this->container['numero_rg'];
    }

    /**
     * Sets numero_rg
     * @param double $numero_rg Número do RG do candidato
     * @return $this
     */
    public function setNumeroRg($numero_rg)
    {
        $this->container['numero_rg'] = $numero_rg;

        return $this;
    }

    /**
     * Gets orgao_emissor_rg
     * @return string
     */
    public function getOrgaoEmissorRg()
    {
        return $this->container['orgao_emissor_rg'];
    }

    /**
     * Sets orgao_emissor_rg
     * @param string $orgao_emissor_rg Órgão emissor do RG do candidato
     * @return $this
     */
    public function setOrgaoEmissorRg($orgao_emissor_rg)
    {
        $this->container['orgao_emissor_rg'] = $orgao_emissor_rg;

        return $this;
    }

    /**
     * Gets estado_civil
     * @return string
     */
    public function getEstadoCivil()
    {
        return $this->container['estado_civil'];
    }

    /**
     * Sets estado_civil
     * @param string $estado_civil Estado civil do candidato  Um dos valores presentes da tabela EstadosCivis
     * @return $this
     */
    public function setEstadoCivil($estado_civil)
    {
        $this->container['estado_civil'] = $estado_civil;

        return $this;
    }

    /**
     * Gets endereco
     * @return \Swagger\Client\Model\InlineResponse200DadosPessoaisEndereco
     */
    public function getEndereco()
    {
        return $this->container['endereco'];
    }

    /**
     * Sets endereco
     * @param \Swagger\Client\Model\InlineResponse200DadosPessoaisEndereco $endereco
     * @return $this
     */
    public function setEndereco($endereco)
    {
        $this->container['endereco'] = $endereco;

        return $this;
    }

    /**
     * Gets ddd_telefone_fixo
     * @return int
     */
    public function getDddTelefoneFixo()
    {
        return $this->container['ddd_telefone_fixo'];
    }

    /**
     * Sets ddd_telefone_fixo
     * @param int $ddd_telefone_fixo DDD do telefone fixo
     * @return $this
     */
    public function setDddTelefoneFixo($ddd_telefone_fixo)
    {
        $this->container['ddd_telefone_fixo'] = $ddd_telefone_fixo;

        return $this;
    }

    /**
     * Gets numero_telefone_fixo
     * @return double
     */
    public function getNumeroTelefoneFixo()
    {
        return $this->container['numero_telefone_fixo'];
    }

    /**
     * Sets numero_telefone_fixo
     * @param double $numero_telefone_fixo Número do telefone fixo
     * @return $this
     */
    public function setNumeroTelefoneFixo($numero_telefone_fixo)
    {
        $this->container['numero_telefone_fixo'] = $numero_telefone_fixo;

        return $this;
    }

    /**
     * Gets ddd_celular_recado
     * @return int
     */
    public function getDddCelularRecado()
    {
        return $this->container['ddd_celular_recado'];
    }

    /**
     * Sets ddd_celular_recado
     * @param int $ddd_celular_recado DDD do celular para recados do candidato
     * @return $this
     */
    public function setDddCelularRecado($ddd_celular_recado)
    {
        $this->container['ddd_celular_recado'] = $ddd_celular_recado;

        return $this;
    }

    /**
     * Gets numero_celular_recado
     * @return double
     */
    public function getNumeroCelularRecado()
    {
        return $this->container['numero_celular_recado'];
    }

    /**
     * Sets numero_celular_recado
     * @param double $numero_celular_recado Número do celular para recados do candidato
     * @return $this
     */
    public function setNumeroCelularRecado($numero_celular_recado)
    {
        $this->container['numero_celular_recado'] = $numero_celular_recado;

        return $this;
    }

    /**
     * Gets nome_contato_celular
     * @return string
     */
    public function getNomeContatoCelular()
    {
        return $this->container['nome_contato_celular'];
    }

    /**
     * Sets nome_contato_celular
     * @param string $nome_contato_celular Pessoa com que deve-se deixar recado no telefone celular de recado
     * @return $this
     */
    public function setNomeContatoCelular($nome_contato_celular)
    {
        $this->container['nome_contato_celular'] = $nome_contato_celular;

        return $this;
    }

    /**
     * Gets ddd_telefone_fixo_recado
     * @return int
     */
    public function getDddTelefoneFixoRecado()
    {
        return $this->container['ddd_telefone_fixo_recado'];
    }

    /**
     * Sets ddd_telefone_fixo_recado
     * @param int $ddd_telefone_fixo_recado DDD do telefone fixo para recados do candidato
     * @return $this
     */
    public function setDddTelefoneFixoRecado($ddd_telefone_fixo_recado)
    {
        $this->container['ddd_telefone_fixo_recado'] = $ddd_telefone_fixo_recado;

        return $this;
    }

    /**
     * Gets numero_telefone_fixo_recado
     * @return double
     */
    public function getNumeroTelefoneFixoRecado()
    {
        return $this->container['numero_telefone_fixo_recado'];
    }

    /**
     * Sets numero_telefone_fixo_recado
     * @param double $numero_telefone_fixo_recado Número do telefone fixo para recados do candidato
     * @return $this
     */
    public function setNumeroTelefoneFixoRecado($numero_telefone_fixo_recado)
    {
        $this->container['numero_telefone_fixo_recado'] = $numero_telefone_fixo_recado;

        return $this;
    }

    /**
     * Gets nome_contato_telefone_fixo
     * @return string
     */
    public function getNomeContatoTelefoneFixo()
    {
        return $this->container['nome_contato_telefone_fixo'];
    }

    /**
     * Sets nome_contato_telefone_fixo
     * @param string $nome_contato_telefone_fixo Pessoa com que deve-se deixar recado no telefone fixo de recado
     * @return $this
     */
    public function setNomeContatoTelefoneFixo($nome_contato_telefone_fixo)
    {
        $this->container['nome_contato_telefone_fixo'] = $nome_contato_telefone_fixo;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


